import os
import csv
import itertools


def list_builder(key_list, type='string_list', dict_name=''):
    new_list = []

    key_list = key_list.split(', ')
    for index, value in enumerate(key_list):
        split = value.split(',')
        key_list[index] = split
    key_list = list(itertools.chain.from_iterable(key_list))

    if key_list == ['']:
        pass
    else:
        for item in key_list:
            if type == 'string_list':
                new_list.append('"' + item + '"')
            elif type == 'dict_list':
                new_list.append(dict_name + '["' + item + '"]')
            else:
                print('Undefined type in list catalog_writer.list_builder')
                return

    new_list = str(new_list).replace("'", "")  # Remove quotes around each elements of the list

    return new_list


path = os.path.dirname(__file__)
subfolder = 'catalogs'
path = os.path.join(path, subfolder)

with open('catalog.py', 'w') as catalog:
    catalog.write('from objects import attribute \n')
    catalog.write('from objects import morality \n')
    catalog.write('from objects import race \n')
    catalog.write('from objects import culture \n')
    catalog.write('from objects import city_size \n')
    catalog.write('from objects import building_kind \n')
    catalog.write('from objects import social_group \n')
    catalog.write('from objects import profession \n')
    catalog.write('from objects import professions_group \n')

    catalog.write('# This file is automatically generated by catalog_writer.py with the .csv files in the catalogs folder \n\n')

    catalog.write('attributes = (')
    file_path = os.path.join(path, 'attributes.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''attribute.Attribute("{name}", [{range}], {mean}, {variance}, {rounding}), \n'''.format(
                name=row['Name'], range=row['Range'], mean=row['Mean'], variance=row['Variance'], rounding=row['Rounding']))
    catalog.write(') \n\n')

    catalog.write('moralities = (')
    file_path = os.path.join(path, 'moralities.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''morality.Morality("{name}", [{range}], {mean}, {variance}, {rounding}, {inherited}), \n'''.format(
                name=row['Name'], range=row['Range'], mean=row['Mean'], variance=row['Variance'], rounding=row['Rounding'], inherited=row['Inherited']))
    catalog.write(') \n\n')

    catalog.write('races = {')
    file_path = os.path.join(path, 'races.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Error": race.Race("Error", 0, 0, 0, []), \n''')
        catalog.write('''"Default": race.Race("Default", 0, 0, 0, []), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            attr_mod_list = list_builder(row['Attributes_modifiers'])
            catalog.write('''"{name}": race.Race("{name}", {working}, {adult}, {old}, {attr_mod}), \n'''.format(
                name=row['Name'], working=row["Working_age"], adult=row['Adult_age'], old=row['Old_age'], attr_mod=attr_mod_list))
    catalog.write('} \n\n')

    catalog.write('cultures = {')
    file_path = os.path.join(path, 'cultures.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Error": culture.Culture("Error", races["Error"], [], "Equal", 0, [], []), \n''')
        catalog.write('''"Default": culture.Culture("Default", races["Error"], [], "Equal", 0, [], []), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            morality_mod_list = list_builder(row['Morality_modifiers'])
            others_list = list_builder(row['Other_cultures'])
            catalog.write('''"{name}": culture.Culture("{name}", races["{main}"], {morality_mod}, "{gender_equal}", {cultural_open}, {others}, [{others_odds}]), \n'''.format(
                name=row['Name'], main=row['Race'], morality_mod=morality_mod_list, gender_equal=row['Gender_equality'], cultural_open=row['Cultural_openness'], others=others_list, others_odds=row['Other_odds']))
    catalog.write('} \n\n')

    catalog.write('city_sizes = {')
    file_path = os.path.join(path, 'city_sizes.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Error": city_size.City_Size("Error", (0, 0)), \n''')
        catalog.write('''"Default": city_size.City_Size("Default", (0, 0)), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''"{name}": city_size.City_Size("{name}", ({min_pop}, {max_pop})), \n'''.format(
                name=row['Name'], min_pop=row['Min_pop'], max_pop=row['Max_pop']))
    catalog.write('} \n\n')

    catalog.write('professions = {')
    file_path = os.path.join(path, 'professions.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Error": profession.Profession("Error", 0, "", 0), \n''')
        catalog.write('''"Default": profession.Profession("Default", 0, "", 0), \n''')
        catalog.write('''"Child": profession.Profession("Child", 0, "", 0), \n''')
        catalog.write('''"Same": profession.Profession("Same", 0, "", 0), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''"{name}": profession.Profession("{name}", {wealth}, "{geo}", {unique}), \n'''.format(
                name=row['Name'], wealth=row['Base_wealth'], geo=row['Geo_restriction'], unique=row['Unique']))
    catalog.write('} \n\n')

    catalog.write('social_groups = {')
    file_path = os.path.join(path, 'social_groups.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Error": social_group.Social_Group("Error", 0, "", "", [], [], [cultures["Error"]]), \n''')
        catalog.write('''"Default": social_group.Social_Group("Default", 0, "", "", [], [], [cultures["Error"]]), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            attributes_list = list_builder(row['Attributes'])
            moralities_list = list_builder(row['Moralities'])
            cultures_list = list_builder(row['Cultures'], 'dict_list', 'cultures')
            professions_list = list_builder(row['Default_professions'], 'dict_list', 'professions')
            catalog.write('''"{name}": social_group.Social_Group("{name}", {inherit}, "{gender}", "{wealth}", {attributes}, {moralities}, {cultures}, {professions}, [{odds}]), \n'''.format(
                name=row['Name'], inherit=row['Strict_inheritance'], gender=row['Gender'], wealth=row['Wealth'], attributes=attributes_list,
                moralities=moralities_list, cultures=cultures_list, professions=professions_list, odds=row['Professions_odds']))
    catalog.write('} \n\n')

    catalog.write('professions_groups = {')
    file_path = os.path.join(path, 'professions_groups.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Default": professions_group.Professions_Group("Default", social_groups["Default"], 0, 0, 0, 0, 0, 0, 0, 0, [], [], [], []), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            professions_list = list_builder(row['Professions'], 'dict_list', 'professions')
            professions_main_list = list_builder(row['Professions_main'], 'dict_list', 'professions')
            catalog.write('''"{name}": professions_group.Professions_Group("{name}", social_groups["{social}"], {main}, {spouse}, {children}, {inheritance},
                {mean}, {variance}, {live}, {work}, {professions_main}, [{odds_main}], {professions}, [{odds}]), \n'''.format(
                name=row['Name'], social=row['Social_group'], main=row['Main_figure'], spouse=row['Spouse'], children=row['Children'], inheritance=row['Inheritance'],
                mean=row['Mean'], variance=row['Variance'], live=row['Live'], work=row['Work'], professions_main=professions_main_list, odds_main=row['Odds_main'], professions=professions_list, odds=row['Odds']))
    catalog.write('} \n\n')

    catalog.write('building_kinds = {')
    file_path = os.path.join(path, 'building_kinds.csv')
    with open(file_path, newline='') as read_file:
        catalog.write('''"Error": building_kind.Building_Kind("Error", 0, 0, []), \n''')
        catalog.write('''"Default": building_kind.Building_Kind("Default", 0, 0, []), \n''')
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            groups_list = list_builder(row['Groups'], 'dict_list', 'professions_groups')
            catalog.write('''"{name}": building_kind.Building_Kind("{name}", {min_pop}, {odds}, {groups}), \n'''.format(
                name=row['Name'], min_pop=row['Min_pop'], odds=row['Odds'], groups=groups_list))
    catalog.write('} \n\n')

    file_path = os.path.join(path, 'cultures_names.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            male_names_list = list_builder(row['Male_names'])
            female_names_list = list_builder(row['Female_names'])
            family_name_list = list_builder(row['Family_names'])
            city_names_list = list_builder(row['City_names'])
            catalog.write('''cultures["{name}"].fill_names_lists({male_names}, {female_names}, {family_names}, {city_names}) \n'''.format(
                name=row['Name'], male_names=male_names_list, female_names=female_names_list, family_names=family_name_list, city_names=city_names_list))
    catalog.write('\n\n')

    file_path = os.path.join(path, 'settings.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, fieldnames=['name', 'value'], delimiter=';')
        for row in reader:
            catalog.write("""{name} = {value} \n""".format(name=row['name'], value=row['value']))

