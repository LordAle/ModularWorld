import os
import csv
import itertools


def list_builder(key_list, type='string_list', dict_name=''):
    new_list = []

    key_list = key_list.split(', ')
    for index, value in enumerate(key_list):
        split = value.split(',')
        key_list[index] = split
    key_list = list(itertools.chain.from_iterable(key_list))

    if key_list == ['']:
        pass
    else:
        for item in key_list:
            if type == 'string_list':
                new_list.append('"' + item + '"')
            elif type == 'dict_list':
                new_list.append(dict_name + '["' + item + '"]')
            else:
                print('Undefined type in list catalog_writer.list_builder')
                return

    new_list = str(new_list).replace("'", "")  # Remove quotes around each elements of the list

    return new_list


path = os.path.dirname(__file__)
subfolder = 'catalogs'
path = os.path.join(path, subfolder)

with open('catalog.py', 'w') as catalog:
    catalog.write('from objects import race \n')
    catalog.write('from objects import culture \n')
    catalog.write('from objects import city_kind \n')
    catalog.write('from objects import city_size \n')
    catalog.write('from objects import classes \n')
    catalog.write('from objects import profession \n')

    catalog.write('# This file is automatically generated by catalog_writer.py with the .csv files in the catalogs folder \n\n')

    catalog.write('races = {')
    file_path = os.path.join(path, 'races.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''"{name}": race.Race("{name}", {adult}, {old}), \n'''.format(name=row['Name'], adult=row['Adult_age'], old=row['Old_age']))
    catalog.write('} \n\n')

    catalog.write('cultures = {')
    file_path = os.path.join(path, 'cultures.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            others_list = list_builder(row['Other_races'], 'dict_list', 'races')
            city_names_list = list_builder(row['City_names'])
            catalog.write('''"{name}": culture.Culture("{name}", races["{main}"], {main_odds}, {others}, [{others_odds}], {city_names}), \n'''.format(
                name=row['Name'], main=row['Main_race'], main_odds=row['Main_odds'], others=others_list, others_odds=row['Other_odds'], city_names=city_names_list))
    catalog.write('} \n\n')

    catalog.write('city_kinds = {')
    file_path = os.path.join(path, 'city_kinds.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''"{name}": city_kind.City_Kind("{name}", {housing}), \n'''.format(name=row['Name'], housing=row['Housing']))
    catalog.write('} \n\n')

    catalog.write('city_sizes = {')
    file_path = os.path.join(path, 'city_sizes.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''"{name}": city_size.City_Size("{name}", ({min_pop}, {max_pop})), \n'''.format(name=row['Name'], min_pop=row['Min_pop'], max_pop=row['Max_pop']))
    catalog.write('} \n\n')

    catalog.write('classes = {')
    file_path = os.path.join(path, 'classes.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            catalog.write('''"{name}": classes.Classes("{name}", {hit_dice}), \n'''.format(name=row['Name'], hit_dice=row['Hit_dice']))
    catalog.write('} \n\n')

    catalog.write('professions = {')
    file_path = os.path.join(path, 'professions.csv')
    with open(file_path, newline='') as read_file:
        reader = csv.DictReader(read_file, delimiter=';')
        for row in reader:
            classes_list = list_builder(row['Classes'], 'dict_list', 'classes')
            catalog.write('''"{name}": profession.Profession("{name}", {wealth}, {classes}, [{classes_odds}], {geo}, {unique}), \n'''.
                          format(name=row['Name'], wealth=row['Wealth'], classes=classes_list, classes_odds=row['Classes_odds'], geo=row['Geo_restriction'], unique=row['Unique']))
    catalog.write('} \n\n')



